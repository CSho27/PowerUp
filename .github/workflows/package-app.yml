name: Publish Electron Forge App (Windows)

on:
  pull_request:
    types:
      - closed
  workflow_dispatch:

jobs:
  build-and-package-win:
    runs-on: windows-latest  # Use Windows runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Ensure this matches your project's Node.js version

      - name: Install dependencies
        run: npm install
        working-directory: ./PowerUp/PowerUp.ElectronUI/electron

      - name: Create `config.json`
        run: |
          echo '{
            "apiBaseUrl": "${{ variables.API_BASE_URL }}",
          }' > config.json

      - name: Make Windows Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run make  # Runs Electron Forge 'make' command
        working-directory: ./PowerUp/PowerUp.ElectronUI/electron

      - name: Upload Windows Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: ./PowerUp/PowerUp.ElectronUI/electron/out/make/  # Path where Electron Forge saves the installer

  build-and-package-osx:
    runs-on: macos-latest  # Use macOS runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18  # Ensure this matches your project's Node.js version

      - name: Install dependencies
        run: npm install
        working-directory: ./PowerUp/PowerUp.ElectronUI/electron
      
      - name: Create `config.json`
        run: |
          echo '{
            "apiBaseUrl": "${{ variables.API_BASE_URL }}",
          }' > config.json

      - name: Make macOS Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run make  # Runs Electron Forge 'make' command
        working-directory: ./PowerUp/PowerUp.ElectronUI/electron

      - name: Upload macOS Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: ./PowerUp/PowerUp.ElectronUI/electron/out/make/  # Path where Electron Forge saves the DMG file
